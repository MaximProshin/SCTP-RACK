<?xml version="1.0" encoding="US-ASCII"?>
<!-- edited with XMLSPY v5 rel. 3 U (http://www.xmlspy.com)
     by Daniel M Kohn (private) -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc4690 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4960.xml">
]>
<rfc category="exp" docName="draft-nielsen-tsvwg-sctp-tlr-01.txt"
     ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes" ?>

  <front>
    <title abbrev="SCTP TLR">SCTP Tail Loss Recovery Enhancements</title>

    <author fullname="Karen E. E. Nielsen" initials="K.N" surname="Nielsen">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>Kistavaegen 25</street>

          <city>Stockholm</city>

          <region/>

          <code>164 80</code>

          <country>Sweden</country>
        </postal>

        <email>karen.nielsen@tieto.com</email>
      </address>
    </author>

    <date/>

    <abstract>
      <t>Loss Recovery by means of T3-Retransmission has significant
      detrimental impact on the delays experienced through an SCTP
      association. The throughput achievable over an SCTP association also is
      negatively impacted by the occurence of T3-Retransmissions. Loss
      Recovery by Fast Retransmission operation is in most situations superior
      to T3-Retransmission from a latency and a throughput perspective. The
      present SCTP Fast Recovery algorithms as specified by <xref
      target="RFC4960"/> are not able to adequately or timely recover losses
      in certain situations, thus resorting to loss recovery by lengthy
      T3-Retransimissions or by non-timely activation of Fast Recovery. In
      this document we propose for a number of enhancements to the SCTP Loss
      Recovery algorithms aimed to amend some of these deficiencies with a
      particular focus on Loss Recovery for drops in Traffic Tails. The
      enhancements supplement the existing algorithms of <xref
      target="RFC4960"/> with proactive probing and timer driven activation of
      the Fast Retransmission algorithm as well as a number of enhancements of
      the Fast Retransmission algorithm in itself are proposed. The
      enhancement are proposed as supplements to the Loss Recovery algorithms
      of <xref target="RFC4960"/> and as such they do not deprecate or replace
      any of the mechanisms defined by <xref target="RFC4960"/>.</t>

      <t>The solution proposed draws on prior art in the area of SCTP and TCP
      Loss Recovery improvements. The mechanisms proposed include the
      adjustment to SCTP Fast Retransmission of certain improvements specified
      for TCP Fast Retransmission by <xref target="RFC6675"/> as well as the
      proposal embeds SCTP Early Retransmit <xref target="RFC5827"/> in a
      delayed variant. The proposal heavily draws on the ideas put forward for
      TCP by <xref target="DUKKIPATI01"/> for proactive probing and timer
      driven entering of Fast Recovery. The proposal embeds certain aspects
      from <xref target="HURTIG"/> when applicable. The procedures proposed
      are sender-side only and do not impact the SCTP receiver.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Loss Recovery by means of T3-Retransmission has significant impact on
      the delays experienced through, as well as, the throughput achievable
      over an SCTP association. Loss Recovery by Fast Retransmission (FR)
      operation in most situations is superior to T3-Retransmission from both
      a latency and a throughput perspective.</t>

      <t>The present SCTP Fast Retransmission algorithm, as specified by <xref
      target="RFC4960"/>, is driven uniquely by exceed of a duptresh number of
      mis indication counts stemming for returned SACKs, and it is as such not
      able to adequately or timely recover losses in traffic tails where a
      sufficient number of such SACKs may not be generated, there resorting to
      loss recovery by T3-Retransimissions or by "non-timely" activation of
      Fast Recovery.</t>

      <t>By drop in traffic tails we refer not only to "pure" tail drops,
      i.e., drop of all packets in the end of the communication on an SCTP
      association from a certain point onwards, but more generally and
      specifically to the following situations: <list style="numbers">
          <t>Pure tail drops of the last SCTP packets of an SCTP association
          or more generally drop of packets in the end of an SCTP association
          which are not proceeded by more than dupthresh number of packets
          which are not dropped. Drops of either type we will generally refer
          to as Tail Drops.</t>

          <t>Tails Drops among packets sent in a the end of bursts spaced by
          pauses of time equal to or greater than the T3-timeout
          (approximately). It is noted that such bursts (pauses in between
          bursts) may result from application limitations, from congestion
          control limitations or from receiver side limitations.</t>

          <t>Drops among packets sent so sparsely that each dropped packet
          constitutes a tail drop in that dupthresh number of packets would
          not be sent (would not be available for sent) prior to expiry of the
          T3-timeout.</t>
        </list></t>

      <t>It shall be noted that while the above traffic drop criteria describe
      drops among the forward data packets only, then drops among forward data
      packets combined with drops of the returned SACKs may together result in
      that an insufficient number of SACKs be returned to traffic sender for
      that the Fast Retransmission algorithm be activated prior to T3-timeout
      occurring. The tail traffic situations for which SCTP FR is not able to
      recover the losses is thus in general broader than the exact situations
      listed above. The improvements proposed includes enhancement of SCTP to
      deduce the mis indication counts from an enhanced SACK scoreboard thus
      removing some of the vulnerability of the present SCTP mis indication
      counting to loss of SACKs.</t>

      <t>It is noted that the Early Retransmit algorithm, <xref
      target="RFC5827"/>, addresses activation of Fast Recovery for a
      particular subset of the above tail drop situations. The solution
      proposed embeds (as a special case) the Early Retransmits algorithm in
      the delayed variant, experienced with for TCP in <xref
      target="DUKKIPATI02"/> in which Early Retransmission is only activated
      provided a certain time has elapsed since the lowest outstanding TSN was
      transmitted. The delay adds robustness towards spurious retransmissions
      caused by "mild" packet re-ordering as documented for TCP in <xref
      target="DUKKIPATI02"/>.</t>

      <section title="SCTP TLR Function">
        <t>The function proposed for enhancements of the SCTP Loss Recovery
        operation for Traffic Tail Losses is divided in two parts: <list
            style="symbols">
            <t>Enhancements of SCTP Fast Retransmisison (SCTP FR) algorithm by
            means of the introduction SCTP FR equivalents of the following
            Tail Loss Recovery improving functions inspired by or specified by
            <xref target="RFC6675"/> for TCP. <list style="symbols">
                <t>Counting mis indications for a missing (non-SACK'ed) TSN
                based on augmented SACK scoreboard information in which the
                mis indications will be based on the number of SACK'ed SCTP
                packets carrying data chunks of higher TSNs. The mechanism is
                specified both in terms of packets, the book-keeping of which
                requires new logic, as well as in terms of a less
                implementation demanding byte based variant following the
                Islost() approach of <xref target="RFC6675"/>. We shall refer
                to this as Extended Mis Indication Counting.</t>

                <t>The "last resort" retransmisssion, Nextseg 3) and Nextseg
                4), operations of <xref target="RFC6675"/> supporting
                conditional proactive fast retransmissions of missing TSNs
                within the Fast Recovery Exit Point but not yet classified as
                lost</t>
              </list></t>

            <t>New SCTP Tail Loss Recovery State machine with proactive timer
            driven activation of (the enhanced) Fast Recovery operation
            whenever network responsiveness (SACKs of packets) has been proven
            within a certain time, shorter then the T3 timeout, from the
            transmittal of the lowest outstanding TSN. The SCTP TLR mechanism
            implements a new timer, the Tail Loss Probe timer (PTO), and it
            works in parts by: <list style="symbols">
                <t>forcing entering of Fast Recovery when network
                responsiveness has been proven and the PTO timer has kicked,
                but additional trafic sent (SACKs of additional traffic sent)
                have not served to activate Fast Recovery based on the
                (extended) mis indication counting.</t>

                <t>probing, by transmittal of a TLR probe packet, for network
                responsiveness, when no other information is available at kick
                of the PTO timer (no packets have been received for any
                packets in the traffic tail).</t>

                <t>allowing for T3-retransmission Loss Recovery only when the
                network remains unresponsive (no SACK received for any traffic
                in the tail nor for the probe packet),</t>
              </list></t>
          </list></t>

        <t>It is noted that depending on the exact situation (e.g., drop
        pattern, congestion window and amount of data in flight) then
        T3-retransmission procedures need not be inferior to Fast
        Retransmission procedures. Rather in some situations T3-retransmission
        will indeed be superior as T3-retransmissions allow for ramp up of the
        congestion window during the Recovery Process and as it, by its nature
        of declaring all outstanding data as lost, never risks being blocked
        by congestion window limitations. The changes proposed in this
        document focus on improving the Loss Recovery operation of SCTP by
        enforcing timely activation of (improved) Fast Retransmission
        algorithms. With the purpose to reduce the latency of the TCP and SCTP
        Loss Recovery operation <xref target="HURTIG"/> has taken the
        alternative approach of accelerating the activation of
        T3-retransmission processes when Fast Recovery is not able to kick in
        to recover the loss. <xref target="HURTIG"/> only addresses a subset
        of the Tail loss scenarios in scope in the work presented here. The
        ideas of <xref target="HURTIG"/> for accurate RTO restart are drawn on
        in the solution proposed here for accurate restart of the new tail
        loss probe timer (PTO-timer) as well as for accurate set of the
        T3-timer under certain conditions thus harvesting some og the same
        latency optimizations as <xref target="HURTIG"/>.</t>

        <t>OPEN ISSUE: It is to be determined if <xref target="HURTIG"/>, or
        plain T3-retransmission of <xref target="RFC4960"/>, are opportune
        compared to the solution proposed here in certain situations.
        Speculated situations include situations where the Fast Retransmission
        algorithm (when activated via new proactive approach) is blocked by
        congestion control (CC) limitations. If the issue is significant, the
        remedy may be to look for special purpose amendments, like to amend
        the CC operation during SCTP FR or to redesign the solution to promote
        proactive T3-retransmission operation rather than Fast Retransmission
        in certain situations. Yet another remedy may be to generally look to
        improve the CC operation of SCTP.</t>

        <t>The SCTP TLR procedures proposed apply as add-on supplements to any
        SCTP implementation based on <xref target="RFC4960"/>. The procedures
        are sender-side only and do not impact the SCTP receiver.</t>
      </section>

      <section title="TCP applicability">
        <t>SCTP Loss Recovery operation in its core is based on the design of
        Loss Recovery for TCP with SACK enabled. The enhancements of SCTP Tail
        Loss Recovery proposed here are readably applicable for TCP.</t>

        <t>It is noted that while the SCTP TLR algorithms and SCTP TLR state
        machine defined is inspired by the timer driven tail loss probe
        approach specified in <xref target="DUKKIPATI01"/> for TCP, then the
        solution defined here differs in the approach taken. The approach here
        is a clean state approach defining a new comprehensive SCTP TLR
        statemachine on top of (in addition to) the existing Fast Recovery and
        T3-Recovery states covering all tails loss patterns, whereas the
        approach of <xref target="DUKKIPATI01"/> relies on a number of
        experimental mechanisms (<xref target="DUKKIPATI02"/>, <xref
        target="MATHIS"/>, <xref target="RFC5827"/>) defined for TCP in IETF
        or in Research with adhoc extension to support selected Tail loss
        patterns by addition of the tail loss probe mechanism and the
        therefrom driven activation of the mechanisms.</t>
      </section>

      <section title="Packet Re-ordering">
        <t>The solution proposed is an enhancement of the existing mis
        indication counting based Fast Recovery operation of SCTP, <xref
        target="RFC4960"/>, and as such the solution inherits the fundamental
        vulnerability to packet re-ordering that the SCTP Fast Recovery
        algorithm of <xref target="RFC4960"/> embeds.</t>

        <t>The solution does not increase the vulnerability of Loss Recovery
        to packet-reordering as demonstrated by (to be filled in).</t>
      </section>

      <section title="Congestion Control">
        <t>It shall be noted that in its very nature of prompting for
        activation of Fast Recovery instead of T3-Recovery then the benefit of
        the solution proposed versus the existing solution of <xref
        target="RFC4960"/> will depend on the CC operation not only during the
        recovery process but also after exit of the recovery process. In this
        context it is noted that the prior approach taken for TCP, <xref
        target="DUKKIPATI01"/>, has been documented for a TCP implementation
        running CUBIC, whereas SCTP runs a CC algorithm more similar to TCP
        Reno CC as defined by <xref target="RFC5681"/>.</t>

        <t>The solution at present is defined within the constraints of
        existing Congestion Control principles of STCP as defined by <xref
        target="RFC4960"/>. It is anticipated that Congestion Control
        improvements are desirable for SCTP in general as well as for the
        functions deined here in particular.</t>
      </section>
    </section>

    <section title="Conventions and Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"/>.</t>
    </section>

    <section title="Description of Algorithms">
      <t/>

      <section title="SCTP Scoreboard and Mis Indication Counting Enhancements">
        <t/>

        <section title="Highest TSN Newly Acknowledged Extension">
          <t>Entering of Fast Recovery in SCTP, as specified by <xref
          target="RFC4960"/>), is driven by mis indication counts. When a TSN
          has received dupthresh=3 mis indication counts, the TSN is declared
          lost and will be eligible for fast retransmission via Fast Recovery
          procedure.</t>

          <t>Mis indication counts are in RFC4960 SCTP driven entirely by
          receipt of SACKs in accordance with the Highest TSN Newly
          Acknowledged algorithm (section 7.2.4 of <xref
          target="RFC4960"/>):</t>

          <t><list style="empty">
              <t>Highest TSN Newly Acknowledged (HTNA): For each incoming
              SACK, miss indications are incremented only for missing TSNs
              prior to the highest TSN newly acknowledged in the SACK. A newly
              acknowledged DATA chunk is one not previously acknowledged in a
              SACK.</t>
            </list></t>

          <t>An evident issue with the HTNA algorithm is that it is vulnerable
          to loss of SACKs. In many situations loss of SACKs will result only
          in a slight delayed entering of Fast Recovery for a dropped TSN, but
          generally then by relying on HTNA algorithm only, loss of SACKs will
          further broaden the trafic tails situations where Fast Recovery
          either not be activated in a timely manner or will not be activated
          at all due to the receipt of an insufficient number SACKs only.</t>

          <t>In order to make SCTP Fast Recovery more robust towards drop of
          SACKs we describe for the following extension of the HTNA algorithm
          to be supported by an SCTP implementation:</t>

          <t><list style="empty">
              <t>Newly Acked Packets ahead-of-line (NAPahol): For each
              incoming SACK, miss indications are incremented only for missing
              TSNs prior to the highest TSN newly acknowledged in the SACK. A
              newly acknowledged DATA chunk is one not previously acknowledged
              in a SACK. For each missing TSN thus potentially eligible for
              additional mis indication counts, the number of mis indications
              to be given shall follow the number of newly acknowledged
              packets ahead of line of the packet of the missing TSN.</t>
            </list></t>

          <t>The solution is robust towards split SACK. The solution requires
          for the SCTP impementation to keep track of the relationship
          inbetween chunks and packets. One solution is for the SCTP
          implementation to maintain a monotonically incrementing packet
          seqence number to map chunks to packets and for each outstanding
          chunk to keep state of the packet id that the chunk was sent in as
          well as (incrementally updated) the packet ids of up to dupthres-1
          (=2) packets ahead of line for which chunks have been SACKed.</t>

          <t>As an alternative to the above accurate packet counting then an
          SCTP implementation MAY instead support the following bytes counting
          based extension of the RFC4960 HTNA algorithm:</t>

          <t><list style="empty">
              <t>Highest Bytes Newly Acknowledged (HBNA): For each incoming
              SACK, miss indications are incremented only for missing TSNs
              prior to the highest TSN newly acknowledged in the SACK. A newly
              acknowledged DATA chunk is one not previously acknowledged in a
              SACK. For each missing TSN thus eligible for additional mis
              indication counts, the number of mis indications to be given
              shall follow the number of newly acknowledge bytes in the SACK
              ahead of line of the missing TSN in the following manner
              Add-mis-indication-count(TSN) = mod_PMTU(Newly bytes ahead of
              line(TSN))+1.</t>
            </list></t>

          <t>For both solutions (NAPhol, HBNA) then it is noted that an SCTP
          implementation only need to keep count of the mis-indications up to
          the dupthres=3 threshold level and equally well an implementation
          need not track the exact number of packets ahead of line or the
          exact number os bytes ahead of line of a certain missing TSN once
          this number surpasses the dupthres=3 threshold.</t>

          <t>This last byte based approach follows the approach taken for TCP,
          Islost(), in <xref target="RFC6675"/>. It is noted, however, that
          due to the message based approach of SCTP, then a byte based
          approach generally will be less accurate as a measure for the number
          of packet received ahead of line than it is for byte stream based
          TCP.</t>

          <t>OPEN ISSUE: Check alignment with algorthms defined in <xref
          target="HURTIG"/>. If relevant align.</t>

          <t/>
        </section>
      </section>

      <section title="RFC6675 nextseg() Tail Loss Enhancements for SCTP FR">
        <t>The Fast Recovery algorithm for TCP as specified in <xref
        target="RFC6675"/> implements some differences compared to the fast
        retransmission algorithm specified for SCTP by <xref
        target="RFC4960"/>. Of particular significance for recovery of losses
        in traffic tails scenarios are the fact that the <xref
        target="RFC6675"/> algorithm, once Fast Recovery has been activated,
        takes two "last resort" retransmission measures, step 3) and step 4)
        of Nextseg() of <xref target="RFC6675"/>, that faciliate the recovery
        of losses in situations where only an insufficient number of SACKs
        would be able to be generated to complete the Fast Recovery process
        without resorting to T3-timeout. For SCTP Fast Recovery we formulate
        the equivalent measures as follows:</t>

        <t><list style="hanging">
            <t hangText="Last Resort Retransmission:">If the following
            conditions are met:<list style="symbols">
                <t>there are no outstanding TSN's eligible for fast
                retransmission due to dupthres or more mis indications</t>

                <t>there is no new data available for transmission</t>
              </list>then an outstanding TSN less than or equal to the Fast
            Recovery Exit Point, for which there exists SACKs of chunks ahead
            of line of the TSN, may be retransmitted provided the CWND allow.
            The bytes of a TSN which is retransmitted in this manner are not
            subtracted from the flight size prior to this action be taken nor
            as a result of this action. If the mis indication count of the TSN
            subsequently reaches the dupthres value, the bytes of the TSN
            shall be subtracted from the flight size. Once acknowledged the
            remaining contribution of this TSN in the flight size (whether it
            be there counted once or twice at this point in time) is
            subtracted. A TSN which is retransmitted in this manner will be
            marked as ineligible for a subsequent fast retransmit.</t>

            <t hangText="Rescue:">If all of the following conditions are met:
            <list style="symbols">
                <t>there are no outstanding TSN's eligible for fast
                retransmission due to dupthres or more mis indications</t>

                <t>there is no new data available for transmission</t>

                <t>there are no outstanding TSNs eligible for Last Resort
                retransmission</t>

                <t>the cumack has progressed since this entering of Fast
                Recovery</t>
              </list>and there exist non-SACKed, non fast retransmitted TSNs,
            within the Fast Recovery Exit point, then for this entry of Fast
            Recovery, conditionally to that the CWND allows, we allow for fast
            retransmisssion of one packet of consecutive outstanding non fast
            retransmitted TSNs up to PMTU size, the highest TSN of which MUST
            be the highest outstanding TSN within the Fast Recovery Point. The
            bytes of a TSN which is retransmitted in this manner are not
            subtracted from the flight size prior to this action be taken nor
            as a result of this action. If the mis indication count of the TSN
            subsequently reaches the dupthres value, the bytes of the TSN
            shall be subtracted from the flight size. Once acknowledged the
            remaining contribution of this TSN in the flight size (whether it
            be there counted once or twice at this point in time) is
            subtracted. A TSN which is retransmitted in this manner will be
            marked as ineligible for a subsequent fast retransmit.</t>
          </list></t>

        <t>An implementation of the Rescue operation may be accomplished by
        maintain of an RescueRTX parameter as described for TCP in <xref
        target="RFC6675"/>.</t>

        <t>DISCUSSION: <xref target="RFC4960"/> in addition to the HTNA
        algorithm demand for additional mis indication counting to be
        performed during Fast Recovery according to the following prescription
        (section 7.2.4 of <xref target="RFC4960"/>):</t>

        <t><list style="hanging">
            <t hangText="(#)">If an endpoint is in Fast Recovery and a SACK
            arrives that advances the Cumulative TSN Ack Point, the miss
            indications are incremented for all TSNs reported missing in the
            SACK.</t>
          </list></t>

        <t>It is noted that under special circumstances then (#) make SCTP
        Fast Recovery complete in situations where TCP Fast Recovery would
        only complete by virtue of the measure 3) or 4) of <xref
        target="RFC6675"/> and as such these measures are more critically
        demanded for TCP Fast Recovery operation than for the SCTP Fast
        Recovery operation. However as documented by (to be filled in) the
        Last Resort Retransmission operation and the Rescue operation also for
        SCTP significantly improve the Loss Recovery operation; the latency of
        the individual loss recovery operation as well as the ability of the
        operation to complete without resort to T3-timeout. Consequently this
        document prescribes for Enhanced SCTP Tail Loss Recovery to implement
        these procedures.</t>

        <t>As the algoritm extension is limited by the existing congestion
        control algorithm of SCTP, these extensions of SCTP Fast Recovery do
        not compromize the TCP fairness of the SCTP Fast Recovery
        Operation.</t>
      </section>

      <section title="SCTP-TLR Description">
        <t/>

        <section title="Principles">
          <t>The Tail Loss Recovery function for SCTP is based on the
          following principles:</t>

          <t><list style="symbols">
              <t>Maintain a Tail Loss Probe Timer (PTO) which, away from when
              SCTP is in Fast Recovery or in T3-recovery, is running on lowest
              outstanding TSN. The PTO timer value used will depend on the
              situation: <list style="empty">
                  <t>By default the following timer value is used: <list
                      style="hanging">
                      <t hangText="     PTO1:">PTO=MIN(RTO,
                      1.5*SRTT+MAX(RTTVAR, DELAY_ACK))</t>
                    </list></t>

                  <t>Whereas the following value is used: <list
                      style="hanging">
                      <t hangText="     PTO2:">PTO=MIN(RTO,
                      1.5*SRTT+RTTVAR)</t>
                    </list> when it is known that subsequent SACKs not
                  acknowledging the TSN for which the PTO is running will be
                  (or will have been) returned immediately. For more details
                  see <xref target="TLR_STM"/>.</t>

                  <t>By design the probe timer is kept lower or equal to the
                  RTO, thereby postponing a potential unnecessary and damaging
                  RTO, as well as generally larger than an anticipated RTT
                  thereby preventing that it kicks in prematurely. I.e., the
                  timer only kicks in at a time where one would have expected
                  to have received a SACK were there no problems.</t>
                </list></t>

              <t>PTO timer driven transmittal of Tail Loss Probe Packet: Once
              data is outstanding and the PTO timer kicks on the lowest
              outstanding TSN and no SACKs of any chunks with higher TSN
              number have arrived, a probe packet, denoted a Tail Loss Probe
              Packet (TLPP), is sent to probe for network responsiveness
              (i.e., for SACK of the TLPP) in order to potentially drive
              proactive entering of Fast Recovery. <list style="symbols">
                  <t>In this situation the PTO timer on the lowest outstanding
                  TSN is cancelled and reset as a T3-timer with value MAX(PTO,
                  RTO-PTO).</t>

                  <t>The TLPP sent is chosen as the lowest unsent TSN if such
                  exists and is available for transmittal or alternatively if
                  no such TSN is available, the presently outstanding packet
                  with highest TSN number. This is done in order to best
                  possibly interface with standard Fast Recovery, i.e., to
                  create a loss pattern situation that corresponds best
                  possibly with how Fast Recovery algorithm retransmits lost
                  packets.</t>
                </list></t>

              <t>PTO timer driven entering of Fast Recovery: Process is
              enforced when network responsiveness is proven (SACK of later
              sent data than lowest outstanding TSN is available) and (at
              least) PTO time has elapsed since transmittal of the lowest
              outstanding TSN.</t>
            </list></t>
        </section>

        <section anchor="TLR_STM" title="SCTP - TLR Statemachine">
          <t>In addition to the Fast Recovery State and the T3-Recovery state
          the SCTP Tail Loss Recovery function defines 3 states: The SCTP TLR
          OPEN state, the SCTP TLR PROBE WAIT state and the SCTP TLR DELAY
          WAIT state. At any given time SCTP transmission logic will be in
          either of the 5 states.</t>

          <t>Figure 1 illustrates the states and the state transistions.</t>

          <t>(to be inserted)</t>

          <figure title="Figure 1, Enhanced Loss Recovery State Machine Diagram">
            <artwork><![CDATA[ ]]></artwork>
          </figure>

          <t>In the following we describe the states and the actions
          taken.</t>

          <t/>

          <section title="SCTP TLR OPEN STATE">
            <t>In this state SCTP is not performing Fast Recovery nor
            T3-recovery. This is the state entered when SCTP sends the first
            data after idle. In this state SCTP has outstanding data, a PTO
            timer is running on the lowest outstanding TSN and the SACK
            scoreboard has no gaps. I.e., the highest SACK'ed TSN is
            cummulatively acked.</t>

            <t>The PTO set on a new lowest outstanding TSN in this state will
            follow [PTO1] when less than 2 packets are outstanding at the time
            when the timer is set and follow [PTO2] when 2 or more packets are
            outstanding when the PTO timer is set.</t>

            <t>In this state the following may happen:</t>

            <t><list style="symbols">
                <t>A SACK acknowledging a higher outstanding TSN than the
                lowest outstanding TSN may arrive thus proving network
                responsiveness while still not acknowledging the lowest
                outstanding TSN. This indicates that either packets are being
                re-ordered or the lowest outstanding TSN has been lost. The
                state will now transit to SCTP TLR DELAY WAIT state for
                potential entering of SCTP TLR driven Fast Recovery if the PTO
                timer kicks prior to the lowest outstanding TSN has been
                acknowledged.</t>

                <t>The PTO set on a new lowest outstanding TSN in this state
                will follow [PTO1] when less than 2 packets are outstanding at
                the time when the timer is set and follow [PTO2] when 2 or
                more packets are outstanding when the PTO timer is set.</t>

                <t>The PTO timer on the lowest outstanding TSN may kick, in
                which case SCTP TLP will send a TLPP, reset the PTO timer on
                the lowest outstanding TSN to a T3 timer of value Max(PTO,
                RTO-PTO) and transit to SCTP TLP PROBE WAIT state to await
                either the kick of the T3 on the lowest outstanding TSN
                (network is persistently unresponsive) or prove of network
                responsiveness and potential entering of SCTP TLP driven Fast
                Recovery unless the network responsiveness proof comes in form
                of cummulative acknowledgement of the TSN.</t>
              </list></t>
          </section>

          <section title="SCTP TLR DELAY PROBE STATE">
            <t>In this state the lowest outstanding TSN has remained
            unSACK&rsquo;ed for more than PTO time and no indication (no SACK
            of higher outstanding TSNs have been received) thus resulting in
            the transmittal of a TLPP to probe for the network
            responsiveness.</t>

            <t>The MAX(PTO, RTO-PTO) T3-value set on the lowest outstanding
            TSN when sending the TLPP probe and entering this state shall be
            MAX(PTO1, (RTO-PTO)_previous), where the (RTO-PTO)_previous is set
            according to value of this at the time the PTO timer previously
            was set on the lowest outstanding TSN.</t>

            <t/>

            <t>In this state then the following may happen:</t>

            <t><list style="symbols">
                <t>A SACK cumulatively acknowledging all holes including the
                lowest outstanding TSN will bring the SCTP TLP STM state back
                to SCTP TLP Open state and the PTO timer will be restarted on
                the new lowest outstanding TSN.</t>

                <t>A SACK will arrive for a higher outstanding TSN with lowest
                outstanding TSN remaining unSACK&rsquo;ed. This will result in
                declaration of the lowest outstanding TSN as lost and will
                make SCTP enter Fast Recovery with exist point being set to
                the highest outstanding TSN as normal.</t>

                <t>A SACK will arrive that acknowledge the lowest outstanding
                TSN, and the PTO timer is reset on the new lowest outstanding
                TSN, but also data of higher TSN than the new lowest
                outstanding TSN are acknowledged in the SACK. In this case
                there is indication that either packet re-ordering has
                occurred or the new lowest outstanding TSN has been lost. The
                state will now transit to SCTP TLP Delay Wait state for
                potential entering of SCTP TLP driven Fast Recovery if the PTO
                timer kicks prior to the new lowest outstanding TSN has
                acknowledged.</t>
              </list></t>
          </section>

          <section title="SCTP TLR DELAY WAIT STATE">
            <t>In this state network responsiveness has been received (in form
            of a SACK of higher TSN than the lowest outstanding TSN) and the
            PTO timer on the lowest outstanding TSN is running for potential
            entering of SCTP TLP driven Fast Recovery.</t>

            <t>The PTO set on a new lowest outstanding TSN in this state will
            be [PTO2].</t>

            <t>In this state then the following may happen:</t>

            <t><list style="symbols">
                <t>The PTO timer on the lowest outstanding TSN kicks. This
                will result in declaration of the lowest outstanding TSN as
                lost and will make SCTP enter Fast Recovery with exist point
                being set to the highest outstanding TSN as normal.</t>

                <t>A SACK cumulatively acknowledging all holes including the
                lowest outstanding TSN will bring the SCTP TLP STM state back
                to SCTP TLP Open state and the PTO timer will be restarted on
                the new lowest outstanding TSN.</t>

                <t>A SACK will arrive that acknowledge the lowest outstanding
                TSN, and the PTO timer is reset on the new lowest outstanding
                TSN, but also data of higher TSN than the new lowest
                outstanding TSN are acknowledged in the SACK. In this case
                there is indication that either packet re-ordering has
                occurred or the new lowest outstanding TSN has been lost. The
                state will remain in SCTP TLP Delay Wait state for potential
                entering of SCTP TLP driven Fast Recovery if the PTO timer
                kicks prior to the new lowest outstanding TSN has
                acknowledged.</t>

                <t>A SACK will arrive that does not acknowledge the lowest
                outstanding TSN. In this situation the no state no changes are
                done to the PTO timer running and the state will remain in
                SCTP TLP Delay Wait state for potential entering of SCTP TLP
                driven Fast Recovery if the PTO timer kicks prior to the
                lowest outstanding TSN has acknowledged.</t>
              </list></t>
          </section>

          <section title="Exit of Loss Recovery">
            <t>After exit of Fast Recovery or T3-Recovery then if data is
            outstanding a PTO timer is started on the lowest outstanding TSN
            and the state transits to either SCTP TLR OPEN state or to SCTP
            TLP DELAY Wait state depending on the status of the SACK
            scoreboard (i.e., do gaps exists or not). The PTO timer set will
            follow the rules described above.</t>
          </section>
        </section>

        <section title="TLPP Transmission Rules">
          <t>The transmission of a Tail Loss Probe Packet (TLPP), done when
          entering the SCTP TLR PROBE DELAY WAIT state, is governed by the
          following details:</t>

          <t><list style="symbols">
              <t>TLPP of new data is always preferred if available.</t>

              <t>TLPP as new data is full-sized packet</t>

              <t>TLPP of retransmission data is one TSN chunk. A TLPP of
              retransmission data counts twice in the in-flight until
              acknowledged.</t>
            </list>The motivation for sending TLPP of retransmission in form
          of one chunk only is that demasking of loss recovery by the TLPP
          (see <xref target="TLPP_rec"/>) is more simple when only one TSN has
          been used as a probe.</t>

          <t>TLPP Transmission conditions:</t>

          <t><list style="symbols">
              <t>If no TLPP is outstanding, a probe is sent unconditionally of
              CWND.</t>

              <t>If a TLPP is outstanding, a probe is sent conditionally to
              flightsize &lt; CWND + 1PMTU, otherwise no TLPP is sent.</t>

              <t>If no new data exists, a probe of retransmission data is sent
              conditional to whether a TLPP is already outstanding. As
              follows:<list style="symbols">
                  <t>If no TLPP is outstanding, send TLPP consisting of
                  highest outstanding TSN.</t>

                  <t>If a TLPP is outstanding, then if and only if the probe
                  is highest outstanding TSN may it be resent. Otherwise no
                  TLPP is sent.</t>
                </list></t>
            </list>The above rules are defined to support detection of TLPP
          recovered losses by the algorithm described in <xref
          target="TLPP_rec"/>. The</t>
        </section>

        <section anchor="TLPP_rec" title="TLPP Recovered Losses">
          <t>If a single SCTP packet is lost, there is a risk that the TLPP
          packet itself might repair the loss if that particular lost packet
          is used as probe. The masking problem is only present if the TLPP is
          based on retransmission data (i.e., not if the TLPP is based on new
          data). The TLPP might mask the loss and thus interfering with the
          congestion control principle that requires for CWND halving when a
          loss is detected.</t>

          <t>At present the solution in this document operates with the
          algorithm defined for this purpose in <xref target="DUKKIPATI01"/>
          with a slight adjustment to SCTP to rely on the D-SACK (duplicate
          TSN received) information available from SCTP SACK. The solution operates with a conceptual TLPP Retransmission Episode. As follows: </t>

          <t><list style="symbols">
              <t>Once a TLPP packet consisting of retransmission data is sent
              a TLPP Retransmission Episode is started. The TLPP
              Retransmission Episode is over when an incoming SACK
              cumulatively acknowledges a sequence number higher than the
              sequence number of the TLPP probe with retransmission data. </t>

              <t>CWND halving is done at the termination of a TLPP Retransmisssion Episode if at this time in stage the number of times the TLPP TSN has been received, acccording to the D-SACK information communicated, is lower than the number of times the TLPP TSN has been sent.</t>

              <t>A TLPP Retransmission Episode is abruptly terminated if Fast Recovery or T3-Recovery is entered. </t>
            </list></t>

<t> OPEN ISSUE: The above solution is vulnerable to spurious CWND halving when a TLPP packet is re-ordered compared to a subsequent new data chunk sent. A possibly solution, contemplated for a number of reasons for SCTP, is to extend SCTP to distinguish retransmitted chunks from original chunks. </t>
          <t/>
        </section>
      </section>

      <section title="SCTP MH Considerations">
        <t>The functions defined have been implemented for SCTP MH. MH aspects
        to be filled in.</t>

        <t/>
      </section>
    </section>

    <section title="Evaluation of function">
      <t>Experiments in progress. Details to be filled in.</t>
    </section>

    <section title="Socket API Considerations">
      <t>This section will describe how the socket API defined in <xref
      target="RFC6458"/> is extended to provide a way for the application to
      control the retransmission algorithms in operation in the SCTP
      layer.</t>

      <t>Socket option for control of the features is yet to be defined.</t>

      <t>Please note that this section is informational only.</t>
    </section>

    <section title="Security Considerations">
      <t>There are no new security considerations introduced by the functions
      defined in this document.</t>
    </section>

    <section title="Acknowledgements">
      <t>The author acknowlegdes Henrik Jensen for his very significant
      contribution for the definition of, the implementation of and the
      experiments with function.</t>

      <t>The work heavily draws on prior art work done for TCP, <xref
      target="DUKKIPATI01"/> in particular. The contributors of that work
      should be credited for many of the ideas put forward here for SCTP.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document does not create any new registries or modify the rules
      for any existing registries managed by IANA.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.4960" ?>

      <?rfc include="reference.RFC.5062"?>

      <?rfc include="reference.RFC.6675" ?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.6458" ?>

      <?rfc include="reference.RFC.5827"?>

      <?rfc include="reference.RFC.5681"?>

      <reference anchor="DUKKIPATI01" target="">
        <front>
          <title>Tail Loss Probe (TLP): An Algorithm for Fast Recovery of
          Tail</title>

          <author fullname="" initials="N." surname="Dukkipati">
            <organization/>
          </author>

          <author fullname="" initials="N." surname="Cardwell">
            <organization/>
          </author>

          <author fullname="" initials="Y." surname="Cheng">
            <organization/>
          </author>

          <author fullname="" initials="M." surname="Mathis">
            <organization/>
          </author>

          <date month="2" year="2013"/>
        </front>

        <seriesInfo name="Work Expired" value=""/>
      </reference>

      <reference anchor="DUKKIPATI02" target="">
        <front>
          <title>Proportional Rate Reduction for TCP</title>

          <author fullname="" initials="N." surname="Dukkipati">
            <organization/>
          </author>

          <author fullname="" initials="M." surname="Mathis">
            <organization/>
          </author>

          <author fullname="" initials="Y." surname="Cheng">
            <organization/>
          </author>

          <author fullname="" initials="M." surname="Ghobadi">
            <organization/>
          </author>

          <date month="11" year="2011"/>
        </front>

        <seriesInfo name="Proceedings of the 11th ACM SIGCOMM Conference on Internet Measurement "
                    value=""/>
      </reference>

      <reference anchor="MATHIS" target="">
        <front>
          <title>FACK</title>

          <author fullname="" initials="M." surname="Mathis">
            <organization/>
          </author>

          <date month="10" year="1996"/>
        </front>

        <seriesInfo name="ACM SIGCOMM Computer Communication Review"
                    value="26,4"/>
      </reference>

      <reference anchor="HURTIG" target="">
        <front>
          <title>TCP and SCTP RTO Restart,
          draft-ietf-tcpm-rtorestart-03</title>

          <author fullname="" initials="P." surname="Hurtig et al.">
            <organization/>
          </author>

          <date month="7" year="2014"/>
        </front>

        <seriesInfo name="IETF Work In Progress" value=""/>
      </reference>
    </references>
  </back>
</rfc>
